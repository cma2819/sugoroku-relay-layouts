{"version":3,"file":"index.js","sources":["../src/extension/timer.ts","../src/extension/index.ts"],"sourcesContent":["import { NodeCG } from './nodecg';\r\n\r\ntype TimerProps = {\r\n    start: Date;\r\n    end: Date;\r\n    isCountdown?: boolean;\r\n}\r\n\r\nexport const Timer = (props: TimerProps) => {\r\n  const isCountdown = props.isCountdown ?? false;\r\n  const startAtTimestamp = isNaN(props.start.getTime()) ? 0 : props.start.getTime();\r\n  const endAtTimestamp = isNaN(props.end.getTime()) ? Infinity : props.end.getTime();\r\n  const timeLength = Math.max(0, endAtTimestamp - startAtTimestamp);\r\n\r\n  let currentTimeInSeconds = 0;\r\n\r\n  const getTimestamps = () => ({\r\n    start: startAtTimestamp,\r\n    end: endAtTimestamp,\r\n  });\r\n\r\n  const tick = (now: Date) => {\r\n    const timestamp = now.getTime();\r\n    const progress = Math.max(0, timestamp - startAtTimestamp);\r\n\r\n    const currentInMs = isCountdown ? timeLength - progress : progress;\r\n\r\n    currentTimeInSeconds = Math.floor(currentInMs / 1000);\r\n  };\r\n\r\n  const getCurrentTimeInSeconds = () => {\r\n    return currentTimeInSeconds;\r\n  };\r\n\r\n  const getDisplayTime = () => {\r\n    const showMinus = currentTimeInSeconds < 0;\r\n    const currentTimeAbs = Math.abs(currentTimeInSeconds);\r\n    const hours = Math.floor(currentTimeAbs / 3600);\r\n    const minutes = Math.floor((currentTimeAbs % 3600) / 60);\r\n    const seconds = Math.floor(currentTimeAbs % 60);\r\n\r\n    return (showMinus ? '-' : '')\r\n      + [\r\n        hours > 0 ? String(hours) : null,\r\n        String(minutes).padStart(2, '0'),\r\n        String(seconds).padStart(2, '0')\r\n      ].filter((v): v is string => v !== null).join(':');\r\n  };\r\n\r\n  return {\r\n    getTimestamps,\r\n    tick,\r\n    getCurrentTimeInSeconds,\r\n    getDisplayTime,\r\n  };\r\n};\r\n\r\nconst timer = (nodecg: NodeCG) => {\r\n\r\n  let timer: ReturnType<typeof Timer>;\r\n\r\n  const defaultSchedule = nodecg.bundleConfig.defaultSchedule;\r\n\r\n  const timerInputsRep = nodecg.Replicant('timerInputs', {\r\n    defaultValue: {\r\n      startAt: defaultSchedule?.start ?? (new Date(0)).toISOString(),\r\n      endAt: defaultSchedule?.end ?? (new Date(Infinity)).toISOString(),\r\n    }\r\n  });\r\n  const timerRep = nodecg.Replicant('timer', {\r\n    defaultValue: {\r\n      startAtTimestamp: 0,\r\n      endAtTimestamp: 0,\r\n      timeInSeconds: 0,\r\n      timeDisplayText: '00:00',\r\n    }\r\n  });\r\n\r\n  timerInputsRep.on('change', newVal => {\r\n    timer = Timer({\r\n      start: new Date(Date.parse(newVal.startAt)),\r\n      end: new Date(Date.parse(newVal.endAt)),\r\n      isCountdown: true\r\n    });\r\n  });\r\n  \r\n  setInterval(() => {\r\n    if(timer) {\r\n      timer.tick(new Date());\r\n\r\n      const timestamps = timer.getTimestamps();\r\n\r\n      timerRep.value = {\r\n        startAtTimestamp: timestamps.start,\r\n        endAtTimestamp: timestamps.end,\r\n        timeInSeconds: timer.getCurrentTimeInSeconds(),\r\n        timeDisplayText: timer.getDisplayTime(),\r\n      };\r\n    }\r\n  }, 100);\r\n};\r\n\r\nexport default timer;","import { NodeCG } from './nodecg';\r\nimport timer from './timer';\r\n\r\nexport default (nodecg: NodeCG) => {\r\n  timer(nodecg);\r\n};"],"names":["timer"],"mappings":";;AAQa,MAAA,KAAA,GAAQ,CAAC,KAAsB,KAAA;AAC1C,EAAM,MAAA,WAAA,GAAc,MAAM,WAAe,IAAA,KAAA,CAAA;AACzC,EAAM,MAAA,gBAAA,GAAmB,KAAM,CAAA,KAAA,CAAM,KAAM,CAAA,OAAA,EAAS,CAAI,GAAA,CAAA,GAAI,KAAM,CAAA,KAAA,CAAM,OAAQ,EAAA,CAAA;AAChF,EAAM,MAAA,cAAA,GAAiB,KAAM,CAAA,KAAA,CAAM,GAAI,CAAA,OAAA,EAAS,CAAI,GAAA,QAAA,GAAW,KAAM,CAAA,GAAA,CAAI,OAAQ,EAAA,CAAA;AACjF,EAAA,MAAM,UAAa,GAAA,IAAA,CAAK,GAAI,CAAA,CAAA,EAAG,iBAAiB,gBAAgB,CAAA,CAAA;AAEhE,EAAA,IAAI,oBAAuB,GAAA,CAAA,CAAA;AAE3B,EAAA,MAAM,gBAAgB,OAAO;AAAA,IAC3B,KAAO,EAAA,gBAAA;AAAA,IACP,GAAK,EAAA,cAAA;AAAA,GACP,CAAA,CAAA;AAEA,EAAM,MAAA,IAAA,GAAO,CAAC,GAAc,KAAA;AAC1B,IAAM,MAAA,SAAA,GAAY,IAAI,OAAQ,EAAA,CAAA;AAC9B,IAAA,MAAM,QAAW,GAAA,IAAA,CAAK,GAAI,CAAA,CAAA,EAAG,YAAY,gBAAgB,CAAA,CAAA;AAEzD,IAAM,MAAA,WAAA,GAAc,WAAc,GAAA,UAAA,GAAa,QAAW,GAAA,QAAA,CAAA;AAE1D,IAAuB,oBAAA,GAAA,IAAA,CAAK,KAAM,CAAA,WAAA,GAAc,GAAI,CAAA,CAAA;AAAA,GACtD,CAAA;AAEA,EAAA,MAAM,0BAA0B,MAAM;AACpC,IAAO,OAAA,oBAAA,CAAA;AAAA,GACT,CAAA;AAEA,EAAA,MAAM,iBAAiB,MAAM;AAC3B,IAAA,MAAM,YAAY,oBAAuB,GAAA,CAAA,CAAA;AACzC,IAAM,MAAA,cAAA,GAAiB,IAAK,CAAA,GAAA,CAAI,oBAAoB,CAAA,CAAA;AACpD,IAAA,MAAM,KAAQ,GAAA,IAAA,CAAK,KAAM,CAAA,cAAA,GAAiB,IAAI,CAAA,CAAA;AAC9C,IAAA,MAAM,OAAU,GAAA,IAAA,CAAK,KAAO,CAAA,cAAA,GAAiB,OAAQ,EAAE,CAAA,CAAA;AACvD,IAAA,MAAM,OAAU,GAAA,IAAA,CAAK,KAAM,CAAA,cAAA,GAAiB,EAAE,CAAA,CAAA;AAE9C,IAAQ,OAAA,CAAA,SAAA,GAAY,MAAM,EACtB,IAAA;AAAA,MACA,KAAQ,GAAA,CAAA,GAAI,MAAO,CAAA,KAAK,CAAI,GAAA,IAAA;AAAA,MAC5B,MAAO,CAAA,OAAO,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AAAA,MAC/B,MAAO,CAAA,OAAO,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AAAA,KACjC,CAAE,OAAO,CAAC,CAAA,KAAmB,MAAM,IAAI,CAAA,CAAE,KAAK,GAAG,CAAA,CAAA;AAAA,GACrD,CAAA;AAEA,EAAO,OAAA;AAAA,IACL,aAAA;AAAA,IACA,IAAA;AAAA,IACA,uBAAA;AAAA,IACA,cAAA;AAAA,GACF,CAAA;AACF,CAAA,CAAA;AAEA,MAAM,KAAA,GAAQ,CAAC,MAAmB,KAAA;AAEhC,EAAIA,IAAAA,MAAAA,CAAAA;AAEJ,EAAM,MAAA,eAAA,GAAkB,OAAO,YAAa,CAAA,eAAA,CAAA;AAE5C,EAAM,MAAA,cAAA,GAAiB,MAAO,CAAA,SAAA,CAAU,aAAe,EAAA;AAAA,IACrD,YAAc,EAAA;AAAA,MACZ,SAAS,eAAiB,EAAA,KAAA,IAAA,qBAAc,IAAK,CAAA,CAAC,GAAG,WAAY,EAAA;AAAA,MAC7D,OAAO,eAAiB,EAAA,GAAA,IAAA,qBAAY,IAAK,CAAA,QAAQ,GAAG,WAAY,EAAA;AAAA,KAClE;AAAA,GACD,CAAA,CAAA;AACD,EAAM,MAAA,QAAA,GAAW,MAAO,CAAA,SAAA,CAAU,OAAS,EAAA;AAAA,IACzC,YAAc,EAAA;AAAA,MACZ,gBAAkB,EAAA,CAAA;AAAA,MAClB,cAAgB,EAAA,CAAA;AAAA,MAChB,aAAe,EAAA,CAAA;AAAA,MACf,eAAiB,EAAA,OAAA;AAAA,KACnB;AAAA,GACD,CAAA,CAAA;AAED,EAAe,cAAA,CAAA,EAAA,CAAG,UAAU,CAAU,MAAA,KAAA;AACpC,IAAAA,SAAQ,KAAM,CAAA;AAAA,MACZ,OAAO,IAAI,IAAA,CAAK,KAAK,KAAM,CAAA,MAAA,CAAO,OAAO,CAAC,CAAA;AAAA,MAC1C,KAAK,IAAI,IAAA,CAAK,KAAK,KAAM,CAAA,MAAA,CAAO,KAAK,CAAC,CAAA;AAAA,MACtC,WAAa,EAAA,IAAA;AAAA,KACd,CAAA,CAAA;AAAA,GACF,CAAA,CAAA;AAED,EAAA,WAAA,CAAY,MAAM;AAChB,IAAA,IAAGA,MAAO,EAAA;AACR,MAAAA,MAAM,CAAA,IAAA,iBAAS,IAAA,IAAA,EAAM,CAAA,CAAA;AAErB,MAAM,MAAA,UAAA,GAAaA,OAAM,aAAc,EAAA,CAAA;AAEvC,MAAA,QAAA,CAAS,KAAQ,GAAA;AAAA,QACf,kBAAkB,UAAW,CAAA,KAAA;AAAA,QAC7B,gBAAgB,UAAW,CAAA,GAAA;AAAA,QAC3B,aAAA,EAAeA,OAAM,uBAAwB,EAAA;AAAA,QAC7C,eAAA,EAAiBA,OAAM,cAAe,EAAA;AAAA,OACxC,CAAA;AAAA,KACF;AAAA,KACC,GAAG,CAAA,CAAA;AACR,CAAA;;ACjGA,YAAe,CAAC,MAAmB,KAAA;AACjC,EAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AACd,CAAA;;;;"}